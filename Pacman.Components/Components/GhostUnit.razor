@inherits UnitComponentBase;

<div style="@GetStyle(Coordinates)" class=@("ghost " + ColorName)>
    <svg class="svg_size">@svgHelper.Ghost</svg>
</div>

@code {

    [Parameter] public string ColorName { get; set; } = "red";
    [Parameter] public Looking Direction { get; set; } = Looking.Left;
    [Parameter] public Position Coordinates { get; set; } = new Position { Top = 300, Left = 300 };

    static bool inited;

    Timer moveTimer, changeDirectionTimer;


    protected async override Task OnInitializedAsync()
    {
        await svgHelper.LoadIconsAsync();
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await Task.Run(() =>
            {
                moveTimer = new Timer(Move, 100);
                changeDirectionTimer = new Timer(ChangeDirection, 500);
            });
    }

    private void Move()
    {
        Move(this.Coordinates, this.Direction);
    }

    private void ChangeDirection()
    {
        var randomValue = new Random(DateTime.Now.Millisecond + DateTime.Now.Second).NextDouble();
        var movement = (int)Math.Floor(randomValue * 4);
        var arrayOfMovement = new Looking[] { Looking.Left, Looking.Up, Looking.Down, Looking.Right };

        this.Direction = arrayOfMovement[movement];
    }

    public void Kill()
    {
        moveTimer.StopTimer();
        changeDirectionTimer.StopTimer();
        this.ColorName = "white";
    }

    public override void Dispose()
    {
        if(moveTimer != null) moveTimer.Dispose();
        if(changeDirectionTimer != null) changeDirectionTimer.Dispose();
    }
}
