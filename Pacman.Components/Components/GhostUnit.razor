@implements IDisposable;

<div style="@Ghost.GetStyle(Ghost.Coordinates)" class=@("ghost " + Ghost.ColorName)>
    <svg class="svg_size">@Ghost.SvgHelper.Ghost</svg>
</div>

@code {

   [Parameter] public IGhost Ghost { get; set; }
   [Parameter] public string ColorName { get { return Ghost.ColorName; } set { Ghost.ColorName = value; } }

    protected async override Task OnInitializedAsync()
    {
        await Ghost.OnInitializedAsync();
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {        
        if (!firstRender) return;

        await Ghost.OnAfterRenderAsync();
        Ghost.OnStateHasChanged += (o, e) => InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        Ghost.Dispose();
    }
}
